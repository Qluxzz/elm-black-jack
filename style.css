/* CSS Reset */
*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
}

html,
body {
    height: 100%;
    overflow: hidden;
    font-family: monospace;
    font-size: 1.2em;
}

body {
    display: flex;
    flex-direction: column;
    line-height: 1.5;
    background-color: rgb(0, 90, 0);
    color: #fff;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

input,
button,
textarea,
select {
    font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/* End of CSS Reset */

/* Write code here */

:root {
    --red-suite: rgb(255, 0, 0);
    --black-suite: rgb(0, 0, 0);
}


body>div {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
}

.actions {
    position: absolute;
    bottom: 0px;
    left: 0;
    right: 0;
    justify-content: center;
    align-items: center;
    display: flex;
    gap: 10px;
    height: 100px;
    padding: 10px;
    background-color: #083c01;
}

.hands {
    display: flex;
    gap: 20px;
}

.hand {
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    transition: opacity 1s;

    &.active {
        background-color: rgba(0, 0, 0, 0.3);
        border-radius: 10px;
    }

    &.busted {
        opacity: 0.1;
    }
}

.result {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0px;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
}

.toast {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0px;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none;

    .message {
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 32px;
        font-weight: bold;
        padding: 10px;
        height: 125px;
        background-color: #fff;
        color: #000;
        border-radius: 10px;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
        animation: toast 250ms ease-in-out;
    }
}

@keyframes toast {
    from {
        filter: opacity(0);
        transform: scale(0.1);
    }

    to {
        filter: opacity(1);
        transform: scale(1);
    }

}

.dealer {
    height: 200px;

    /* Nested div for dealers second hidden card */
    .card-flip {
        position: absolute;
        width: 100%;
        height: 100%;

        transform-style: preserve-3d;
        transition: transform 500ms;

        &.hidden {
            transform: rotateY(180deg);
        }

        >.card-front,
        >.card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;

            border-radius: 10px;
            border: 1px solid #000;
            background-color: #fff;

        }

        >.card-back {
            transform: rotateY(180deg);

        }
    }
}

/* CARDS */

.cards {
    display: flex;
    justify-content: center;
}

.card:not(:first-child) {
    margin-left: -60px;
}

.card:nth-child(1n+2) {
    transform: translateY(2px);
}

.card:nth-child(2n+2) {
    transform: translateY(-2px);
}


.card {
    aspect-ratio: 2.25 / 3.5;
    width: 100px;
    position: relative;
    perspective: 1000px;
}

.card-inner {
    position: absolute;
    top: -400px;
    animation: deal-card 600ms ease-out;
    animation-fill-mode: forwards;
    width: 100%;
    height: 100%;

    line-height: 1;
    color: #000;
    font-variant-numeric: tabular-nums;
}

.player .card-inner {
    border-radius: 10px;
    border: 1px solid #000;
    background-color: #fff;
}


@keyframes deal-card {
    from {
        top: -400px;
        transform: rotateZ(-180deg);
        filter: opacity(0);
    }

    to {
        top: 0;
        filter: opacity(1);
    }
}


/* SUITES */

.color {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.color::before,
.color::after {
    position: absolute;
    font-size: 32px;
    width: 32px;
    text-align: center;
}

.color::before {
    left: 0;
    top: 32px;
}

.color::after {
    right: 0px;
    bottom: 32px;
    transform: scale(1, -1);
}


.spades::before,
.spades::after {
    content: '♠';
    color: var(--black-suite);
}

.clubs::before,
.clubs::after {
    content: '♣';
    color: var(--black-suite);
}

.hearts::before,
.hearts::after {
    content: '♥';
    color: var(--red-suite);
}

.diamonds::before,
.diamonds::after {
    content: '♦';
    color: var(--red-suite);
}



/* VALUES */

.value {
    position: absolute;
    top: 0;
    left: 0px;
    right: 0;
    bottom: 0;
}

.value::before,
.value::after {
    font-size: 32px;
    position: absolute;
    width: 32px;
    text-align: center;
}

.value::before {
    left: 0px;
    top: 5px;
}

.value::after {
    right: 0px;
    bottom: 5px;
    transform: scale(1, -1);
}

.ace::before,
.ace::after {
    content: 'A';
}

.one::before,
.one::after {
    content: '1';
}

.two::before,
.two::after {
    content: '2';
}

.three::before,
.three::after {
    content: '3';
}

.four::before,
.four::after {
    content: '4';
}

.five::before,
.five::after {
    content: '5';
}

.six::before,
.six::after {
    content: '6';
}

.seven::before,
.seven::after {
    content: '7';
}

.eight::before,
.eight::after {
    content: '8';
}

.nine::before,
.nine::after {
    content: '9';
}

.ten::before,
.ten::after {
    content: '10';
}

.ten::after {
    right: 7px;
}

.jack::before,
.jack::after {
    content: 'J';
}

.queen::before,
.queen::after {
    content: 'Q';
}

.king::before,
.king::after {
    content: 'K';
}

/* CHIP/MARKER */

.marker {
    width: 64px;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    border: 4px dashed #000;
    background-color: green;
    color: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    cursor: pointer;
    opacity: 0.8;
    transition: transform 200ms;

    &:hover {
        opacity: 1;
        transform: translateY(-10px);
    }

    &:disabled {
        filter: opacity(0.2);
        pointer-events: none;
    }

    /* Values */
    &._1 {
        background-color: #fff;
    }

    &._10 {
        background-color: rgb(255, 0, 0);
    }

    &._100 {
        background-color: rgb(0, 255, 255);
    }

    &._500 {
        background-color: #000;
        border-color: #fff;
        color: #fff;
    }
}